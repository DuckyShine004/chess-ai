#pragma once

namespace engine::evaluation {

// clang-format off
// inline constexpr int POSITION_TABLES[6][64] = {
//     {
//         0,  0,  0,  0,  0,  0,  0,  0,
//         50, 50, 50, 50, 50, 50, 50, 50,
//         10, 10, 20, 30, 30, 20, 10, 10,
//         5,  5, 10, 25, 25, 10,  5,  5,
//         0,  0,  0, 20, 20,  0,  0,  0,
//         5, -5,-10,  0,  0,-10, -5,  5,
//         5, 10, 10,-20,-20, 10, 10,  5,
//         0,  0,  0,  0,  0,  0,  0,  0
//     },
//     {
//         -50,-40,-30,-30,-30,-30,-40,-50,
//         -40,-20,  0,  0,  0,  0,-20,-40,
//         -30,  0, 10, 15, 15, 10,  0,-30,
//         -30,  5, 15, 20, 20, 15,  5,-30,
//         -30,  0, 15, 20, 20, 15,  0,-30,
//         -30,  5, 10, 15, 15, 10,  5,-30,
//         -40,-20,  0,  5,  5,  0,-20,-40,
//         -50,-40,-30,-30,-30,-30,-40,-50
//     },
//     {
//         -20,-10,-10,-10,-10,-10,-10,-20,
//         -10,  0,  0,  0,  0,  0,  0,-10,
//         -10,  0,  5, 10, 10,  5,  0,-10,
//         -10,  5,  5, 10, 10,  5,  5,-10,
//         -10,  0, 10, 10, 10, 10,  0,-10,
//         -10, 10, 10, 10, 10, 10, 10,-10,
//         -10,  5,  0,  0,  0,  0,  5,-10,
//         -20,-10,-10,-10,-10,-10,-10,-20
//     },
//     {
//         0,  0,  0,  0,  0,  0,  0,  0,
//         5, 10, 10, 10, 10, 10, 10,  5,
//         -5,  0,  0,  0,  0,  0,  0, -5,
//         -5,  0,  0,  0,  0,  0,  0, -5,
//         -5,  0,  0,  0,  0,  0,  0, -5,
//         -5,  0,  0,  0,  0,  0,  0, -5,
//         -5,  0,  0,  0,  0,  0,  0, -5,
//         0,  0,  0,  5,  5,  0,  0,  0
//     },
//     {
//         -20,-10,-10, -5, -5,-10,-10,-20,
//         -10,  0,  0,  0,  0,  0,  0,-10,
//         -10,  0,  5,  5,  5,  5,  0,-10,
//         -5,  0,  5,  5,  5,  5,  0, -5,
//         0,  0,  5,  5,  5,  5,  0, -5,
//         -10,  5,  5,  5,  5,  5,  0,-10,
//         -10,  0,  5,  0,  0,  0,  0,-10,
//         -20,-10,-10, -5, -5,-10,-10,-20
//     },
//     {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   5,   5,   5,   5,   0,   0,
//         0,   5,   5,  10,  10,   5,   5,   0,
//         0,   5,  10,  20,  20,  10,   5,   0,
//         0,   5,  10,  20,  20,  10,   5,   0,
//         0,   0,   5,  10,  10,   5,   0,   0,
//         0,   5,   5,  -5,  -5,   0,   5,   0,
//         0,   0,   5,   0, -15,   0,  10,   0
//     }
// };
// clang-format on

// clang-format off
inline constexpr int POSITION_TABLES[6][64] = {
    // {
    //     90,  90,  90,  90,  90,  90,  90,  90,
    //     30,  30,  30,  40,  40,  30,  30,  30,
    //     20,  20,  20,  30,  30,  30,  20,  20,
    //     10,  10,  10,  20,  20,  10,  10,  10,
    //      5,   5,  10,  20,  20,   5,   5,   5,
    //      0,   0,   0,   5,   5,   0,   0,   0,
    //      0,   0,   0, -10, -10,   0,   0,   0,
    //      0,   0,   0,   0,   0,   0,   0,   0
    // },
    {
        90,  90,  90,  90,  90,  90,  90,  90,
        30,  30,  30,  40,  40,  30,  30,  30,
        20,  20,  40,  50,  50,  40,  20,  20,
        10,  10,  10,  60,  60,  10,  10,  10,
         5,   5,  10,  20,  20,   5,   5,   5,
         0,   0,   0,   5,   5,   0,   0,   0,
         0,   0,   0, -10, -10,   0,   0,   0,
         0,   0,   0,   0,   0,   0,   0,   0
    },
    {
        -5,   0,   0,   0,   0,   0,   0,  -5,
        -5,   0,   0,  10,  10,   0,   0,  -5,
        -5,   5,  20,  20,  20,  20,   5,  -5,
        -5,  10,  20,  30,  30,  20,  10,  -5,
        -5,  10,  20,  30,  30,  20,  10,  -5,
        -5,   5,  20,  10,  10,  20,   5,  -5,
        -5,   0,   0,   0,   0,   0,   0,  -5,
        -5, -10,   0,   0,   0,   0, -10,  -5
    },
    {
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,   0,   0,   0,   0,   0,
        0,  20,   0,  10,  10,   0,  20,   0,
        0,   0,  10,  20,  20,  10,   0,   0,
        0,   0,  10,  20,  20,  10,   0,   0,
        0,  10,   0,   0,   0,   0,  10,   0,
        0,  30,   0,   0,   0,   0,  30,   0,
        0,   0, -10,   0,   0, -10,   0,   0
    },
    {
        50,  50,  50,  50,  50,  50,  50,  50,
        50,  50,  50,  50,  50,  50,  50,  50,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,  10,  20,  20,  10,   0,   0,
         0,   0,   0,  20,  20,   0,   0,   0
    },
    {
        -20,-10,-10, -5, -5,-10,-10,-20,
        -10,  0,  0,  0,  0,  0,  0,-10,
        -10,  0,  5,  5,  5,  5,  0,-10,
        -5,  0,  5,  5,  5,  5,  0, -5,
        0,  0,  5,  5,  5,  5,  0, -5,
        -10,  5,  5,  5,  5,  5,  0,-10,
        -10,  0,  5,  0,  0,  0,  0,-10,
        -20,-10,-10, -5, -5,-10,-10,-20
    },
    {
        0,   0,   0,   0,   0,   0,   0,   0,
        0,   0,   5,   5,   5,   5,   0,   0,
        0,   5,   5,  10,  10,   5,   5,   0,
        0,   5,  10,  20,  20,  10,   5,   0,
        0,   5,  10,  20,  20,  10,   5,   0,
        0,   0,   5,  10,  10,   5,   0,   0,
        0,   5,   5,  -5,  -5,   0,   5,   0,
        0,   0,   5,   0, -15,   0,  10,   0
    }
};
// clang-format on

// TODO: Tune penalty values
inline constexpr int STACKED_PAWN_PENALTY = -10;

inline constexpr int ISOLATED_PAWN_PENALTY = -10;

// Indexed by rank
inline constexpr int PASSED_PAWN_BONUS[8] = { 0, 5, 10, 20, 35, 60, 100, 200 };

// Rook open files
inline constexpr int SEMI_OPEN_FILE_SCORE = 10;

inline constexpr int OPEN_FILE_SCORE = 15;

// King safety factor
inline constexpr int KING_SAFETY_FACTOR = 5;

} // namespace engine::evaluation
